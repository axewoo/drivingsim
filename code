//
//    FILE: HX_read_median_average.ino
//  AUTHOR: Rob Tillaart
// PURPOSE: HX711 demo
//     URL: https://github.com/RobTillaart/HX711


#include "HX711.h"

HX711 scale;

uint8_t dataPin = 2;
uint8_t clockPin = 3;
//uint8_t dataPin2 = 4;
//uint8_t clockPin2 = 5;

uint32_t start, stop;
volatile float f;
//volatile float g;

void setup()
{
  Serial.begin(115200);
  Serial.println(__FILE__);
  Serial.print("LIBRARY VERSION: ");
  Serial.println(HX711_LIB_VERSION);
  Serial.println();

  scale.begin(dataPin, clockPin);
  //scale.begin(dataPin2, clockPin2);

  // TODO find a nice solution for this calibration..
  // load cell factor 20 KG
  //scale.set_scale(127.15);

  // load cell factor 5 KG
  // scale.set_scale(420.0983);
  // reset the scale to zero = 0
  scale.tare();
  scale.calibrate_scale(0);
//  Serial.println("\nPERFORMANCE");
  
//  Serial.print("  VAL: ");
//  Serial.println(f, 2);

//  Serial.println("\nPERFORMANCE2");
//  start = micros();
//  g = 0;
//  for (int i = 0; i < 100; i++)
//  {
//    g = scale.read_average(10);
//  }
//  stop = micros();
//  Serial.print("100x read_average(10) = ");
//  Serial.println(stop - start);
//  Serial.print("  VAL2: ");
//  Serial.println(g, 2);
}



void loop()
{
  // continuous scale once per second
  f = scale.read_average(2);
  Serial.println(f);
  ////g = scale.read_average(10);
  //Serial.println(g);
  delay(1);
}


// -- END OF FILE --
